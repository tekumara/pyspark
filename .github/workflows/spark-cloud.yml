name: spark-cloud

on:
  push:
    branches:
      - spark-cloud
  pull_request:
    branches:
      - spark-cloud

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        scala: [ '2.11' ]
        hadoop: [ 'hadoop-3.1' ]
    name: Build Spark Distribution with Scala ${{ matrix.scala }} / ${{ matrix.hadoop }}

    steps:
      - uses: actions/checkout@master
      # We split caches because GitHub Action Cache has a 400MB-size limit.
      - uses: actions/cache@v1
        with:
          path: build
          key: build-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            build-
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/com
          key: ${{ matrix.scala }}-${{ matrix.hadoop }}-maven-com-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ matrix.scala }}-${{ matrix.hadoop }}-maven-com-
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository/org
          key: ${{ matrix.scala }}-${{ matrix.hadoop }}-maven-org-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ matrix.scala }}-${{ matrix.hadoop }}-maven-org-
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - name: Change to Scala ${{ matrix.scala }}
        run: |
          dev/change-scala-version.sh ${{ matrix.scala }}
      - name: Build distribution ${{ matrix.hadoop }}-cloud
        run: |
          export MAVEN_CLI_OPTS="--no-transfer-progress"
          mkdir -p ~/.m2
          ./dev/make-distribution.sh --name ${{ matrix.hadoop }}-cloud --pip --tgz -P${{ matrix.hadoop }} -Phadoop-cloud -Pmesos -Pyarn -Pkubernetes "$MAVEN_CLI_OPTS"
          rm -rf ~/.m2/repository/org/apache/spark
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python/dist/pyspark-2.4.5.tar.gz
          asset_name: pyspark-2.4.5.tar.gz
          asset_content_type: application/gzip
